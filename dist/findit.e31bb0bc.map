{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","error","console","log","err","searchForm","document","querySelector","searchInput","addEventListener","submitFunc","e","value","showMessage","reddit","results","output","forEach","post","image","preview","images","source","url","title","truncateText","selftext","subreddit","score","getElementById","innerHTML","preventDefault","Messages","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortended","indexOf","substring"],"mappings":"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","file":"findit.e31bb0bc.map","sourceRoot":"..","sourcesContent":["export default {\r\n    search: function(searchTerm, searchLimit, sortBy) {\r\n        return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\r\n            .then(res => res.json())\r\n            .then(data => data.data.children.map(data => data.data))\r\n            .catch(error => console.log(err));\r\n    }\r\n}","import reddit from './redditapi'\r\n\r\n\r\n// Form\r\nconst searchForm = document.querySelector('#search-form');\r\n// Search Term\r\nconst searchInput = document.querySelector('#search-input');\r\n\r\n// Form Submit\r\nsearchForm.addEventListener('submit', submitFunc);\r\n\r\n// Custom Submit Function\r\nfunction submitFunc(e){\r\n    \r\n    // get search term\r\n    const searchTerm = searchInput.value;\r\n    // get Sort\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n    // Get Limit\r\n    const searchLimit = document.querySelector('#limit').value;\r\n    \r\n    // Check Input\r\n    if(searchTerm == \"\"){\r\n        // Show Message\r\n        showMessage('Please add a Search Term', 'alert-danger');\r\n    \r\n    }\r\n\r\n    // Clear Input\r\n    searchInput.value = \"\";\r\n\r\n    // Search Reddit\r\n    reddit.search(searchTerm, searchLimit, sortBy)\r\n    .then(results => {\r\n        //console.log(results);\r\n\r\n        let output = `<div class=\"card-columns\">`;\r\n        // Loop Through Posts\r\n        results.forEach(post => {\r\n            //Check for image\r\n            const image = post.preview ? post.preview.images[0].source.url : 'https://assets3.thrillist.com/v1/image/1507847/size/tmg-article_default_mobile.jpg' ;\r\n            \r\n            output += `\r\n            <div class=\"card\">\r\n\r\n                <img src=\"${image}\" class=\"card-img-top\" alt=\"...\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">${post.title}</h5>\r\n                    <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n                    <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\r\n                    <hr>\r\n                    <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\r\n                    <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n                </div>\r\n            </div>\r\n            `;\r\n        });\r\n\r\n        output += '</div>';\r\n\r\n        document.getElementById('results').innerHTML = output;\r\n    });\r\n\r\n    // Default Prevension\r\n    e.preventDefault();\r\n}\r\n\r\n\r\n//Show Messages\r\nfunction showMessage(Messages, className){\r\n    \r\n\r\n    //Create Div\r\n    const div = document.createElement('div');\r\n    \r\n    // Add Class\r\n    div.className = `alert ${className}`;\r\n    \r\n    // Add Text\r\n    div.appendChild(document.createTextNode(Messages));\r\n    \r\n    // Get Parrent\r\n    const searchContainer = document.querySelector('#search-container');\r\n    \r\n    // Get Search\r\n    const search = document.querySelector('#search');\r\n    \r\n    // Insert Message Div\r\n    searchContainer.insertBefore(div, search);\r\n\r\n    // Insert Message\r\n    setTimeout(()=> document.querySelector('.alert').remove(),3000);\r\n\r\n\r\n}\r\n\r\n\r\n// Truncate Texts\r\nfunction truncateText(text, limit){\r\n    //search for ' ' (Space)\r\n    const shortended = text.indexOf(' ', limit);\r\n    // If Space not found\r\n    if(shortended == -1) return text;\r\n    \r\n    return text.substring(0, shortended);\r\n}\r\n\r\n"]}